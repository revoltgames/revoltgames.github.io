"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[389],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(r),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5208:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:1},o="Introduction",l={unversionedId:"terra/intro",id:"terra/intro",title:"Introduction",description:"Terra is a database with real-world data, indexed on h3geo. This data is served via an API for geolocalised games like Neopolis and Neoland.",source:"@site/docs/terra/intro.md",sourceDirName:"terra",slug:"/terra/intro",permalink:"/docs/terra/intro",draft:!1,editUrl:"https://github.com/revoltgames/docs/tree/main/docs/terra/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Terra API",permalink:"/docs/category/terra-api"},next:{title:"Getting Started",permalink:"/docs/terra/getting-started"}},s={},d=[{value:"Terra entities",id:"terra-entities",level:2},{value:"Lands and h3Geo",id:"lands-and-h3geo",level:2},{value:"Biomes",id:"biomes",level:2},{value:"Country names transations",id:"country-names-transations",level:2}],c={toc:d};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Terra is a database with real-world data, indexed on h3geo. This data is served via an API for geolocalised games like Neopolis and Neoland."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Cultural data (country, closest city)"),(0,a.kt)("li",{parentName:"ul"},"Natural data (biomes: urban, forst, desert, etc)"),(0,a.kt)("li",{parentName:"ul"},"Curated Places (real world buildings)")),(0,a.kt)("h2",{id:"terra-entities"},"Terra entities"),(0,a.kt)("p",null,"Terra has 4 main entities"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"countries"),", all soverain states in the world (used to categorise lands)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cities"),", a curated list of all cities in the world (used for closest city in lands)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lands")," (h3geo resoltuion 8) is the building block of Terra and are associated to a ",(0,a.kt)("inlineCode",{parentName:"li"},"closest city")," and to ",(0,a.kt)("inlineCode",{parentName:"li"},"biomes")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"places")," defines a real-world point of interest (building, station, shop, office, etc...)")),(0,a.kt)("h2",{id:"lands-and-h3geo"},"Lands and h3Geo"),(0,a.kt)("p",null,"Each land is identified by a unique h3geo index of resolution 8, representing a geospacial hexagon with en edge length of ~460m. For more info on h3geo, see ",(0,a.kt)("a",{parentName:"p",href:"https://h3geo.org/"},"the official documentation"),"."),(0,a.kt)("h2",{id:"biomes"},"Biomes"),(0,a.kt)("p",null,"TODO"),(0,a.kt)("h2",{id:"country-names-transations"},"Country names transations"),(0,a.kt)("p",null,"TODO"))}u.isMDXComponent=!0}}]);