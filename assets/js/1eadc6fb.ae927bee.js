"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[453],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?n.createElement(f,s(s({ref:r},c),{},{components:t})):n.createElement(f,s({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4257:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=t(7462),o=(t(7294),t(3905));const a={sidebar_position:3},s="Error Responses",i={unversionedId:"terra/errors-responses",id:"terra/errors-responses",title:"Error Responses",description:"There are two types of error responses:",source:"@site/docs/terra/errors-responses.md",sourceDirName:"terra",slug:"/terra/errors-responses",permalink:"/docs/terra/errors-responses",draft:!1,editUrl:"https://github.com/revoltgames/docs/tree/main/docs/terra/errors-responses.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/terra/getting-started"},next:{title:"Get Countries",permalink:"/docs/terra/get-countries"}},l={},p=[{value:"HTTP Errors (<code>status code != 200</code>)",id:"http-errors-status-code--200",level:2},{value:"Internal Server Errors (<code>status code == 200</code>)",id:"internal-server-errors-status-code--200",level:2}],c={toc:p};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"error-responses"},"Error Responses"),(0,o.kt)("p",null,"There are two types of error responses: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HTTP Errors")," means that the client didn't make a valid request"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Internal Server Errors")," means that the request was valid, but could not be fulfulled")),(0,o.kt)("p",null,"If everything went fine, the response will be formatted in JSON and contain ",(0,o.kt)("inlineCode",{parentName:"p"},'"status": "ok"'),"."),(0,o.kt)("h2",{id:"http-errors-status-code--200"},"HTTP Errors (",(0,o.kt)("inlineCode",{parentName:"h2"},"status code != 200"),")"),(0,o.kt)("p",null,"When the reponse contains a status code that is NOT ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")," , the request body is a simple error message formatted as a string. This means that a mistake was made on the caller-side (e.g request badly formatted or invalid authentification token)"),(0,o.kt)("p",null,"For example, the response for an invalid token is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"HTTP/1.1 401 Unauthorized\nContent-Length: 68\nContent-Type: text/plain; charset=utf-8\n(...)\n\nunauthorized error: unauthorized: invalid jwt: signature is invalid\n")),(0,o.kt)("h2",{id:"internal-server-errors-status-code--200"},"Internal Server Errors (",(0,o.kt)("inlineCode",{parentName:"h2"},"status code == 200"),")"),(0,o.kt)("p",null,"When the response status is ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")," , this means that the request made wy the caller is valid. However, if something went wrong while handeling the request, the server will return a error message formatted like this :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'HTTP/1.1 200 OK\nContent-Length: 168\nContent-Type: text/plain; charset=utf-8\n(...)\n\n{\n    "status": "error"\n    "error_message": "The error message, in plain english"\n}\n')))}u.isMDXComponent=!0}}]);